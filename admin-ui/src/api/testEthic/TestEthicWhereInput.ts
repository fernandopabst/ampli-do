import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { StringFilter } from "../../util/StringFilter";

export type TestEthicWhereInput = {
  amendmentNumber?: IntNullableFilter;
  appCreatedBy?: IntNullableFilter;
  appModifiedBy?: StringNullableFilter;
  approvalDate?: DateTimeNullableFilter;
  approvalExpiryDate?: DateTimeNullableFilter;
  approvalReference?: StringNullableFilter;
  approvalRequirementBy?: StringNullableFilter;
  approvalValidFor?: IntNullableFilter;
  chairsAction?: FloatNullableFilter;
  created?: FloatNullableFilter;
  createdBy?: StringNullableFilter;
  decisionNotificationWorkflow_2?: StringNullableFilter;
  doNotUseApprovalExpiryDate?: DateTimeNullableFilter;
  doNotUsePiName?: StringNullableFilter;
  doNotUsePreviousStatus?: StringNullableFilter;
  emailComments?: StringNullableFilter;
  enterpriseProject?: StringNullableFilter;
  ethicsPanelView?: StringNullableFilter;
  firstApproved?: IntNullableFilter;
  healthOfSport?: StringNullableFilter;
  id?: StringFilter;
  institution?: StringNullableFilter;
  itemType?: StringNullableFilter;
  meetingDate?: DateTimeNullableFilter;
  migrateFlow?: StringNullableFilter;
  modified?: FloatNullableFilter;
  modifiedBy?: StringNullableFilter;
  newApplicationRequest?: StringNullableFilter;
  notes?: IntNullableFilter;
  path?: StringNullableFilter;
  principalInvestigator?: StringNullableFilter;
  projectStatus?: StringNullableFilter;
  projectSupervisor?: StringNullableFilter;
  projectTitle?: StringNullableFilter;
  projectType?: StringNullableFilter;
  requiresChairsAction?: FloatNullableFilter;
  reSubmission?: FloatNullableFilter;
  specialConsideration?: StringNullableFilter;
  testEmailToPrincipleInvestigator?: StringNullableFilter;
};
